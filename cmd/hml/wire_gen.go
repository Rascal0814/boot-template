// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"example/hml/config"
	"example/hml/internal/server"
	"example/hml/internal/service"
	"github.com/Rascal0814/boot/kratos/depend"
	"github.com/Rascal0814/boot/kratos/log"
	"github.com/go-kratos/kratos/v2"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp() (*kratos.App, func(), error) {
	logger, err := log.ProvideLogger()
	if err != nil {
		return nil, nil, err
	}
	configConfig, err := config.NewConfig()
	if err != nil {
		return nil, nil, err
	}
	data := configConfig.Data
	registrar := depend.NewConsulRegistrar(data)
	configServer := configConfig.Server
	echoService, err := service.NewEchoService()
	if err != nil {
		return nil, nil, err
	}
	grpcServer, err := server.NewGRPCServer(configServer, echoService, logger)
	if err != nil {
		return nil, nil, err
	}
	httpServer, err := server.NewHTTPServer(configServer, echoService, logger)
	if err != nil {
		return nil, nil, err
	}
	app, err := newApp(logger, registrar, grpcServer, httpServer)
	if err != nil {
		return nil, nil, err
	}
	return app, func() {
	}, nil
}
